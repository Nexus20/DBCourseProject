@using CourseProject.BLL.FilterModels
@model CarsWithFiltersViewModel

@{
    ViewData["Title"] = "Cars list";
}

<h1>Cars</h1>
<hr>

<p>
    <a asp-action="Create" asp-area="Admin" asp-controller="Cars" class="btn btn-primary btn-lg">Add a new car</a>
</p>
<div class="row">
    <div class="col-12">
        <form method="get" asp-action="Index" id="car-filtering-form">
            <div class="d-flex gap-2 mb-3">
                @await Component.InvokeAsync("BrandsFilterComponent", new {selectedBrand = Model.SelectedBrand})
                @await Component.InvokeAsync("ModelsFilterComponent", new {selectedModel = Model.SelectedModel})
            </div>
            <div class="mb-3">
                <label asp-for="@Model.Filters.Model" class="form-label"></label>
                <input asp-for="@Model.Filters.Model" name="Model" class="form-control" value="@(string.IsNullOrWhiteSpace(Model.Model)?"":$"{Model.Model}")" />
            </div>
            <div class="mb-3">
                <label asp-for="@Model.Filters.OrderType" class="form-label"></label>
                <select asp-for="@Model.Filters.OrderType" name="OrderType" class="form-select">
                    @Html.Raw("<option " + (Model.SelectedOrderType is CarOrderType.None ? "selected = \"selected\" " : "") + "value=" + (int)CarOrderType.None + ">None</option>")
                    @Html.Raw("<option " + (Model.SelectedOrderType is CarOrderType.AlphabetAsc ? "selected = \"selected\" " : "") + "value=" + (int)CarOrderType.AlphabetAsc + ">Alphabetically</option>")
                    @Html.Raw("<option " + (Model.SelectedOrderType is CarOrderType.AlphabetDesc ? "selected = \"selected\" " : "") + "value=" + (int)CarOrderType.AlphabetDesc + ">Reverse alphabetically</option>")
                </select>
            </div>
            <div class="mb-3 d-flex gap-2">
                <input type="submit" value="Fitler" class="btn btn-primary" />
                <a asp-action="Index" asp-controller="Cars" asp-area="Admin" class="btn btn-secondary">Reset All Filters</a>
            </div>
            <div class="mb-3">
                <div class="form-label">Items per page:</div>
                <div class="dropdown" id="items-per-page-dropdown">
                    <button class="btn btn-outline-primary dropdown-toggle" type="button" id="items-per-page-dropdown-btn-toggle" data-bs-toggle="dropdown" aria-expanded="false">
                        @Model.PageViewModel.PageSize
                    </button>
                    <ul class="dropdown-menu" aria-labelledby="items-per-page-dropdown-btn-toggle">
                        <li>
                            <button type="submit" class="dropdown-item" name="TakeCount" value="10">10</button>
                            <button type="submit" class="dropdown-item" name="TakeCount" value="20">20</button>
                            <button type="submit" class="dropdown-item" name="TakeCount" value="50">50</button>
                            <button type="submit" class="dropdown-item" name="TakeCount" value="100">100</button>
                        </li>
                    </ul>
                </div>
            </div>
        </form>
    </div>
</div>

<div class="row">
    <div class="col-12 pagination">
        <div class="d-flex gap-1">
            @for (var i = 1; i <= Model.PageViewModel.TotalPages; i++) {
                @Html.Raw($"<button form=\"car-filtering-form\" type=\"submit\" name=\"PageNumber\" {(i == Model.PageViewModel.PageNumber ? "disabled" : "")} value=\"{i}\" class=\"btn btn-primary\">{i}</button>")
            }
        </div>
    </div>
</div>
@if (Model.Cars.Any()) {
    <table class="table">
        <thead>
            <tr>
                <th>Model</th>
                <th>Image</th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model.Cars) {
                <tr>
                    <td>
                        @Html.DisplayFor(modelItem => item.FullModel)
                    </td>
                    <td>
                        @if (item.Photos.Any()) {
                            <img src="@item.Photos.First().Path" alt="" style="width: 100px">
                        }
                    </td>
                    <td>
                        <div class="dropdown">
                            <button class="btn btn-primary dropdown-toggle" type="button" id="@($"dropdownMenuButton{item.Id}")" data-bs-toggle="dropdown" aria-expanded="false">
                                Actions
                            </button>
                            <ul class="dropdown-menu" aria-labelledby="@($"dropdownMenuButton{item.Id}")">
                                <li><a asp-action="Edit" asp-area="Admin" asp-controller="Cars" asp-route-id="@item.Id" class="dropdown-item">Edit</a></li>
                                <li><a asp-action="Details" asp-area="Admin" asp-controller="Cars" asp-route-id="@item.Id" class="dropdown-item">Details</a></li>
                                <li class="dropdown-divider"></li>
                                <li><a asp-action="Delete" asp-area="Admin" asp-controller="Cars" asp-route-id="@item.Id" class="dropdown-item">Delete</a></li>
                            </ul>
                        </div>
                    </td>
                </tr>
            }
        </tbody>
    </table>
}
else {
    <h3>No cars found (</h3>
}

<div class="row">
    <div class="col-12 pagination">
        <div class="d-flex gap-1">
            @for (var i = 1; i <= Model.PageViewModel.TotalPages; i++) {
                @Html.Raw($"<button form=\"car-filtering-form\" type=\"submit\" name=\"PageNumber\" {(i == Model.PageViewModel.PageNumber ? "disabled" : "")} value=\"{i}\" class=\"btn btn-primary\">{i}</button>")
            }
        </div>
    </div>
</div>
