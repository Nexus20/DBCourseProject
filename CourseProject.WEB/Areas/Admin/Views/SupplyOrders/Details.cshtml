@using CourseProject.Domain
@model SupplyOrderViewModel

@{
    ViewData["Title"] = $"Supply order #{Model.Id}";
}

<h1>Supply order #@Model.Id</h1>
<hr>
<div class="row">
    <div class="col-12">
        <dl>
            <dt class="col-sm-2">
                @Html.DisplayNameFor(model => model.State)
            </dt>
            <dd class="col-sm-10">
                @Html.DisplayFor(model => model.State)
            </dd>
            <dt class="col-sm-2">
                @Html.DisplayNameFor(model => model.CreationDate)
            </dt>
            <dd class="col-sm-10">
                @Html.DisplayFor(model => model.CreationDate)
            </dd>
            <dt class="col-sm-2">
                @Html.DisplayNameFor(model => model.LastUpdateDate)
            </dt>
            <dd class="col-sm-10">
                @Html.DisplayFor(model => model.LastUpdateDate)
            </dd>
            <dt class="col-sm-2">
                @Html.DisplayNameFor(model => model.Supplier)
            </dt>
            <dd class="col-sm-10">
                @Html.DisplayFor(model => model.Supplier.Name)
            </dd>
            <dt class="col-sm-2">
                Cars info
            </dt>
            <dd class="col-sm-10">
                
                @if (Model.Parts.Any()) {

                    @foreach (var orderPart in Model.Parts) {
                        <p>Car: @orderPart.EquipmentItemsValues.ToList()[0].EquipmentItem.Car.FullModel</p>
                        <p>Configuration:</p>
                        <div>

                            @foreach (var equipmentItemValue in orderPart.EquipmentItemsValues) {
                                <p>@equipmentItemValue.EquipmentItem.Category.Name: @equipmentItemValue.Value</p>
                            }

                        </div>
                        <p>Cars count: @orderPart.Count</p>
                    }
                }
                else {
                    <p>There are no cars in order</p>
                }
            </dd>
        </dl>
    </div>
    <div class="col-12">
        <div class="col-5">
            <div class="d-flex gap-1">
                <a asp-action="Index" asp-area="Admin" asp-controller="SupplyOrders" class="btn btn-primary">Go to list</a>
                
                @switch (Model.State) {
                    case SupplyOrderState.New:
                        <a asp-action="AddCarsToSupplyOrder" asp-area="Admin" asp-controller="SupplyOrders" asp-route-supplyOrderId="@Model.Id" class="btn btn-primary">Add cars to this order</a>
                        <a asp-action="SendSupplyOrder" asp-area="Admin" asp-controller="SupplyOrders" asp-route-supplyOrderId="@Model.Id" class="btn btn-primary">Send order to the supplier</a>
                        break;
                    case SupplyOrderState.Processing:
                        <a asp-action="CloseSupplyOrder" asp-area="Admin" asp-controller="SupplyOrders" asp-route-supplyOrderId="@Model.Id" class="btn btn-primary">Close this order</a>
                        <a asp-action="CancelSupplyOrder" asp-area="Admin" asp-controller="SupplyOrders" asp-route-supplyOrderId="@Model.Id" class="btn btn-primary">Cancel this order</a>
                        break;
                    case SupplyOrderState.Closed:
                        break;
                    case SupplyOrderState.Canceled:
                        break;
                }
                @*<a asp-action="Delete" asp-area="Admin" asp-controller="SupplyOrders" asp-route-id="@Model.Id" class="btn btn-danger">Delete</a>*@
            </div>
        </div>
    </div>
</div>