// <auto-generated />
using System;
using CourseProject.DAL;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CourseProject.DAL.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("CourseProject.DAL.Entities.Brand", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Brands");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "BMW"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Audi"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Citroen"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Skoda"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Volkswagen"
                        },
                        new
                        {
                            Id = 6,
                            Name = "Volvo"
                        });
                });

            modelBuilder.Entity("CourseProject.DAL.Entities.Car", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("ModelId")
                        .HasColumnType("int");

                    b.Property<string>("Submodel")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("ModelId");

                    b.HasIndex("Submodel")
                        .IsUnique();

                    b.ToTable("Cars");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ModelId = 3,
                            Submodel = "Sportback 40 TFSI quattro S line"
                        },
                        new
                        {
                            Id = 2,
                            ModelId = 3,
                            Submodel = "Sportback 35 TFSI"
                        },
                        new
                        {
                            Id = 3,
                            ModelId = 4,
                            Submodel = "Aircross"
                        },
                        new
                        {
                            Id = 4,
                            ModelId = 4,
                            Submodel = "Aircross New"
                        },
                        new
                        {
                            Id = 5,
                            ModelId = 5,
                            Submodel = "A5"
                        },
                        new
                        {
                            Id = 6,
                            ModelId = 5,
                            Submodel = "A7"
                        },
                        new
                        {
                            Id = 7,
                            ModelId = 6,
                            Submodel = "III"
                        },
                        new
                        {
                            Id = 8,
                            ModelId = 6,
                            Submodel = "IV"
                        },
                        new
                        {
                            Id = 9,
                            ModelId = 7,
                            Submodel = "B5 (D) Momentum Pro AWD"
                        },
                        new
                        {
                            Id = 10,
                            ModelId = 2,
                            Submodel = "xDrive40i"
                        });
                });

            modelBuilder.Entity("CourseProject.DAL.Entities.CarInStock", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("CarId")
                        .HasColumnType("int");

                    b.Property<int>("ShowroomId")
                        .HasColumnType("int");

                    b.Property<string>("VinCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("CarId");

                    b.HasIndex("ShowroomId");

                    b.HasIndex("VinCode")
                        .IsUnique();

                    b.ToTable("CarsInStock");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CarId = 1,
                            ShowroomId = 1,
                            VinCode = "12345678912345671"
                        },
                        new
                        {
                            Id = 2,
                            CarId = 3,
                            ShowroomId = 1,
                            VinCode = "12345678912345672"
                        },
                        new
                        {
                            Id = 3,
                            CarId = 5,
                            ShowroomId = 1,
                            VinCode = "12345678912345673"
                        },
                        new
                        {
                            Id = 4,
                            CarId = 2,
                            ShowroomId = 2,
                            VinCode = "12345678912345674"
                        },
                        new
                        {
                            Id = 5,
                            CarId = 4,
                            ShowroomId = 2,
                            VinCode = "12345678912345675"
                        },
                        new
                        {
                            Id = 6,
                            CarId = 6,
                            ShowroomId = 2,
                            VinCode = "12345678912345676"
                        },
                        new
                        {
                            Id = 7,
                            CarId = 3,
                            ShowroomId = 3,
                            VinCode = "12345678912345677"
                        },
                        new
                        {
                            Id = 8,
                            CarId = 5,
                            ShowroomId = 3,
                            VinCode = "12345678912345678"
                        },
                        new
                        {
                            Id = 9,
                            CarId = 9,
                            ShowroomId = 3,
                            VinCode = "12345678912345679"
                        },
                        new
                        {
                            Id = 10,
                            CarId = 9,
                            ShowroomId = 3,
                            VinCode = "12345678912345670"
                        });
                });

            modelBuilder.Entity("CourseProject.DAL.Entities.CarInStockEquipmentItemValue", b =>
                {
                    b.Property<int>("CarInStockId")
                        .HasColumnType("int");

                    b.Property<int>("EquipmentItemValueId")
                        .HasColumnType("int");

                    b.HasKey("CarInStockId", "EquipmentItemValueId");

                    b.HasIndex("EquipmentItemValueId");

                    b.ToTable("CarInStockEquipmentItemsValues");
                });

            modelBuilder.Entity("CourseProject.DAL.Entities.CarPhoto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("CarId")
                        .HasColumnType("int");

                    b.Property<string>("Path")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CarId");

                    b.ToTable("CarPhotos");
                });

            modelBuilder.Entity("CourseProject.DAL.Entities.EquipmentItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("CarId")
                        .HasColumnType("int");

                    b.Property<int>("EquipmentItemCategoryId")
                        .HasColumnType("int");

                    b.Property<bool>("Optional")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("EquipmentItemCategoryId");

                    b.HasIndex("CarId", "EquipmentItemCategoryId")
                        .IsUnique();

                    b.ToTable("EquipmentItems");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CarId = 1,
                            EquipmentItemCategoryId = 1,
                            Optional = false
                        },
                        new
                        {
                            Id = 2,
                            CarId = 1,
                            EquipmentItemCategoryId = 2,
                            Optional = false
                        },
                        new
                        {
                            Id = 3,
                            CarId = 1,
                            EquipmentItemCategoryId = 3,
                            Optional = false
                        },
                        new
                        {
                            Id = 4,
                            CarId = 2,
                            EquipmentItemCategoryId = 1,
                            Optional = false
                        },
                        new
                        {
                            Id = 5,
                            CarId = 2,
                            EquipmentItemCategoryId = 2,
                            Optional = false
                        },
                        new
                        {
                            Id = 6,
                            CarId = 2,
                            EquipmentItemCategoryId = 3,
                            Optional = false
                        },
                        new
                        {
                            Id = 7,
                            CarId = 3,
                            EquipmentItemCategoryId = 1,
                            Optional = false
                        },
                        new
                        {
                            Id = 8,
                            CarId = 3,
                            EquipmentItemCategoryId = 2,
                            Optional = false
                        },
                        new
                        {
                            Id = 9,
                            CarId = 3,
                            EquipmentItemCategoryId = 3,
                            Optional = false
                        },
                        new
                        {
                            Id = 10,
                            CarId = 4,
                            EquipmentItemCategoryId = 1,
                            Optional = false
                        },
                        new
                        {
                            Id = 11,
                            CarId = 4,
                            EquipmentItemCategoryId = 2,
                            Optional = false
                        },
                        new
                        {
                            Id = 12,
                            CarId = 4,
                            EquipmentItemCategoryId = 3,
                            Optional = false
                        },
                        new
                        {
                            Id = 13,
                            CarId = 5,
                            EquipmentItemCategoryId = 1,
                            Optional = false
                        },
                        new
                        {
                            Id = 14,
                            CarId = 5,
                            EquipmentItemCategoryId = 2,
                            Optional = false
                        },
                        new
                        {
                            Id = 15,
                            CarId = 5,
                            EquipmentItemCategoryId = 3,
                            Optional = false
                        },
                        new
                        {
                            Id = 16,
                            CarId = 6,
                            EquipmentItemCategoryId = 1,
                            Optional = false
                        },
                        new
                        {
                            Id = 17,
                            CarId = 6,
                            EquipmentItemCategoryId = 2,
                            Optional = false
                        },
                        new
                        {
                            Id = 18,
                            CarId = 6,
                            EquipmentItemCategoryId = 3,
                            Optional = false
                        },
                        new
                        {
                            Id = 19,
                            CarId = 7,
                            EquipmentItemCategoryId = 1,
                            Optional = false
                        },
                        new
                        {
                            Id = 20,
                            CarId = 7,
                            EquipmentItemCategoryId = 2,
                            Optional = false
                        },
                        new
                        {
                            Id = 21,
                            CarId = 7,
                            EquipmentItemCategoryId = 3,
                            Optional = false
                        },
                        new
                        {
                            Id = 22,
                            CarId = 8,
                            EquipmentItemCategoryId = 1,
                            Optional = false
                        },
                        new
                        {
                            Id = 23,
                            CarId = 8,
                            EquipmentItemCategoryId = 2,
                            Optional = false
                        },
                        new
                        {
                            Id = 24,
                            CarId = 8,
                            EquipmentItemCategoryId = 3,
                            Optional = false
                        },
                        new
                        {
                            Id = 25,
                            CarId = 9,
                            EquipmentItemCategoryId = 1,
                            Optional = false
                        },
                        new
                        {
                            Id = 26,
                            CarId = 9,
                            EquipmentItemCategoryId = 2,
                            Optional = false
                        },
                        new
                        {
                            Id = 27,
                            CarId = 9,
                            EquipmentItemCategoryId = 3,
                            Optional = false
                        },
                        new
                        {
                            Id = 28,
                            CarId = 10,
                            EquipmentItemCategoryId = 1,
                            Optional = false
                        },
                        new
                        {
                            Id = 29,
                            CarId = 10,
                            EquipmentItemCategoryId = 2,
                            Optional = false
                        },
                        new
                        {
                            Id = 30,
                            CarId = 10,
                            EquipmentItemCategoryId = 3,
                            Optional = false
                        });
                });

            modelBuilder.Entity("CourseProject.DAL.Entities.EquipmentItemCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UnitsOfMeasure")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("EquipmentItemCategories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Engine",
                            UnitsOfMeasure = ""
                        },
                        new
                        {
                            Id = 2,
                            Name = "Color",
                            UnitsOfMeasure = ""
                        },
                        new
                        {
                            Id = 3,
                            Name = "Transmission",
                            UnitsOfMeasure = ""
                        });
                });

            modelBuilder.Entity("CourseProject.DAL.Entities.EquipmentItemValue", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("EquipmentItemId")
                        .HasColumnType("int");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("EquipmentItemId");

                    b.ToTable("EquipmentItemValues");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            EquipmentItemId = 1,
                            Price = 10000m,
                            Value = "Engine 1"
                        },
                        new
                        {
                            Id = 2,
                            EquipmentItemId = 1,
                            Price = 15000m,
                            Value = "Engine 2"
                        },
                        new
                        {
                            Id = 3,
                            EquipmentItemId = 1,
                            Price = 8000m,
                            Value = "Engine 3"
                        },
                        new
                        {
                            Id = 4,
                            EquipmentItemId = 2,
                            Price = 1000m,
                            Value = "Color 1"
                        },
                        new
                        {
                            Id = 5,
                            EquipmentItemId = 2,
                            Price = 1500m,
                            Value = "Color 2"
                        },
                        new
                        {
                            Id = 6,
                            EquipmentItemId = 2,
                            Price = 800m,
                            Value = "Color 3"
                        },
                        new
                        {
                            Id = 7,
                            EquipmentItemId = 3,
                            Price = 15000m,
                            Value = "Transmission 1"
                        },
                        new
                        {
                            Id = 8,
                            EquipmentItemId = 3,
                            Price = 12000m,
                            Value = "Transmission 2"
                        },
                        new
                        {
                            Id = 9,
                            EquipmentItemId = 3,
                            Price = 9000m,
                            Value = "Transmission 3"
                        },
                        new
                        {
                            Id = 10,
                            EquipmentItemId = 4,
                            Price = 10000m,
                            Value = "Engine 1"
                        },
                        new
                        {
                            Id = 11,
                            EquipmentItemId = 4,
                            Price = 15000m,
                            Value = "Engine 2"
                        },
                        new
                        {
                            Id = 12,
                            EquipmentItemId = 4,
                            Price = 8000m,
                            Value = "Engine 3"
                        },
                        new
                        {
                            Id = 13,
                            EquipmentItemId = 5,
                            Price = 1000m,
                            Value = "Color 1"
                        },
                        new
                        {
                            Id = 14,
                            EquipmentItemId = 5,
                            Price = 1500m,
                            Value = "Color 2"
                        },
                        new
                        {
                            Id = 15,
                            EquipmentItemId = 5,
                            Price = 800m,
                            Value = "Color 3"
                        },
                        new
                        {
                            Id = 16,
                            EquipmentItemId = 6,
                            Price = 15000m,
                            Value = "Transmission 1"
                        },
                        new
                        {
                            Id = 17,
                            EquipmentItemId = 6,
                            Price = 12000m,
                            Value = "Transmission 2"
                        },
                        new
                        {
                            Id = 18,
                            EquipmentItemId = 6,
                            Price = 9000m,
                            Value = "Transmission 3"
                        },
                        new
                        {
                            Id = 19,
                            EquipmentItemId = 7,
                            Price = 10000m,
                            Value = "Engine 1"
                        },
                        new
                        {
                            Id = 20,
                            EquipmentItemId = 7,
                            Price = 15000m,
                            Value = "Engine 2"
                        },
                        new
                        {
                            Id = 21,
                            EquipmentItemId = 7,
                            Price = 8000m,
                            Value = "Engine 3"
                        },
                        new
                        {
                            Id = 22,
                            EquipmentItemId = 8,
                            Price = 1000m,
                            Value = "Color 1"
                        },
                        new
                        {
                            Id = 23,
                            EquipmentItemId = 8,
                            Price = 1500m,
                            Value = "Color 2"
                        },
                        new
                        {
                            Id = 24,
                            EquipmentItemId = 8,
                            Price = 800m,
                            Value = "Color 3"
                        },
                        new
                        {
                            Id = 25,
                            EquipmentItemId = 9,
                            Price = 15000m,
                            Value = "Transmission 1"
                        },
                        new
                        {
                            Id = 26,
                            EquipmentItemId = 9,
                            Price = 12000m,
                            Value = "Transmission 2"
                        },
                        new
                        {
                            Id = 27,
                            EquipmentItemId = 9,
                            Price = 9000m,
                            Value = "Transmission 3"
                        },
                        new
                        {
                            Id = 28,
                            EquipmentItemId = 10,
                            Price = 10000m,
                            Value = "Engine 1"
                        },
                        new
                        {
                            Id = 29,
                            EquipmentItemId = 10,
                            Price = 15000m,
                            Value = "Engine 2"
                        },
                        new
                        {
                            Id = 30,
                            EquipmentItemId = 10,
                            Price = 8000m,
                            Value = "Engine 3"
                        },
                        new
                        {
                            Id = 31,
                            EquipmentItemId = 11,
                            Price = 1000m,
                            Value = "Color 1"
                        },
                        new
                        {
                            Id = 32,
                            EquipmentItemId = 11,
                            Price = 1500m,
                            Value = "Color 2"
                        },
                        new
                        {
                            Id = 33,
                            EquipmentItemId = 11,
                            Price = 800m,
                            Value = "Color 3"
                        },
                        new
                        {
                            Id = 34,
                            EquipmentItemId = 12,
                            Price = 15000m,
                            Value = "Transmission 1"
                        },
                        new
                        {
                            Id = 35,
                            EquipmentItemId = 12,
                            Price = 12000m,
                            Value = "Transmission 2"
                        },
                        new
                        {
                            Id = 36,
                            EquipmentItemId = 12,
                            Price = 9000m,
                            Value = "Transmission 3"
                        },
                        new
                        {
                            Id = 37,
                            EquipmentItemId = 13,
                            Price = 10000m,
                            Value = "Engine 1"
                        },
                        new
                        {
                            Id = 38,
                            EquipmentItemId = 13,
                            Price = 15000m,
                            Value = "Engine 2"
                        },
                        new
                        {
                            Id = 39,
                            EquipmentItemId = 13,
                            Price = 8000m,
                            Value = "Engine 3"
                        },
                        new
                        {
                            Id = 40,
                            EquipmentItemId = 14,
                            Price = 1000m,
                            Value = "Color 1"
                        },
                        new
                        {
                            Id = 41,
                            EquipmentItemId = 14,
                            Price = 1500m,
                            Value = "Color 2"
                        },
                        new
                        {
                            Id = 42,
                            EquipmentItemId = 14,
                            Price = 800m,
                            Value = "Color 3"
                        },
                        new
                        {
                            Id = 43,
                            EquipmentItemId = 15,
                            Price = 15000m,
                            Value = "Transmission 1"
                        },
                        new
                        {
                            Id = 44,
                            EquipmentItemId = 15,
                            Price = 12000m,
                            Value = "Transmission 2"
                        },
                        new
                        {
                            Id = 45,
                            EquipmentItemId = 15,
                            Price = 9000m,
                            Value = "Transmission 3"
                        },
                        new
                        {
                            Id = 46,
                            EquipmentItemId = 16,
                            Price = 10000m,
                            Value = "Engine 1"
                        },
                        new
                        {
                            Id = 47,
                            EquipmentItemId = 16,
                            Price = 15000m,
                            Value = "Engine 2"
                        },
                        new
                        {
                            Id = 48,
                            EquipmentItemId = 16,
                            Price = 8000m,
                            Value = "Engine 3"
                        },
                        new
                        {
                            Id = 49,
                            EquipmentItemId = 17,
                            Price = 1000m,
                            Value = "Color 1"
                        },
                        new
                        {
                            Id = 50,
                            EquipmentItemId = 17,
                            Price = 1500m,
                            Value = "Color 2"
                        },
                        new
                        {
                            Id = 51,
                            EquipmentItemId = 17,
                            Price = 800m,
                            Value = "Color 3"
                        },
                        new
                        {
                            Id = 52,
                            EquipmentItemId = 18,
                            Price = 15000m,
                            Value = "Transmission 1"
                        },
                        new
                        {
                            Id = 53,
                            EquipmentItemId = 18,
                            Price = 12000m,
                            Value = "Transmission 2"
                        },
                        new
                        {
                            Id = 54,
                            EquipmentItemId = 18,
                            Price = 9000m,
                            Value = "Transmission 3"
                        },
                        new
                        {
                            Id = 55,
                            EquipmentItemId = 19,
                            Price = 10000m,
                            Value = "Engine 1"
                        },
                        new
                        {
                            Id = 56,
                            EquipmentItemId = 19,
                            Price = 15000m,
                            Value = "Engine 2"
                        },
                        new
                        {
                            Id = 57,
                            EquipmentItemId = 19,
                            Price = 8000m,
                            Value = "Engine 3"
                        },
                        new
                        {
                            Id = 58,
                            EquipmentItemId = 20,
                            Price = 1000m,
                            Value = "Color 1"
                        },
                        new
                        {
                            Id = 59,
                            EquipmentItemId = 20,
                            Price = 1500m,
                            Value = "Color 2"
                        },
                        new
                        {
                            Id = 60,
                            EquipmentItemId = 20,
                            Price = 800m,
                            Value = "Color 3"
                        },
                        new
                        {
                            Id = 61,
                            EquipmentItemId = 21,
                            Price = 15000m,
                            Value = "Transmission 1"
                        },
                        new
                        {
                            Id = 62,
                            EquipmentItemId = 21,
                            Price = 12000m,
                            Value = "Transmission 2"
                        },
                        new
                        {
                            Id = 63,
                            EquipmentItemId = 21,
                            Price = 9000m,
                            Value = "Transmission 3"
                        },
                        new
                        {
                            Id = 64,
                            EquipmentItemId = 22,
                            Price = 10000m,
                            Value = "Engine 1"
                        },
                        new
                        {
                            Id = 65,
                            EquipmentItemId = 22,
                            Price = 15000m,
                            Value = "Engine 2"
                        },
                        new
                        {
                            Id = 66,
                            EquipmentItemId = 22,
                            Price = 8000m,
                            Value = "Engine 3"
                        },
                        new
                        {
                            Id = 67,
                            EquipmentItemId = 23,
                            Price = 1000m,
                            Value = "Color 1"
                        },
                        new
                        {
                            Id = 68,
                            EquipmentItemId = 23,
                            Price = 1500m,
                            Value = "Color 2"
                        },
                        new
                        {
                            Id = 69,
                            EquipmentItemId = 23,
                            Price = 800m,
                            Value = "Color 3"
                        },
                        new
                        {
                            Id = 70,
                            EquipmentItemId = 24,
                            Price = 15000m,
                            Value = "Transmission 1"
                        },
                        new
                        {
                            Id = 71,
                            EquipmentItemId = 24,
                            Price = 12000m,
                            Value = "Transmission 2"
                        },
                        new
                        {
                            Id = 72,
                            EquipmentItemId = 24,
                            Price = 9000m,
                            Value = "Transmission 3"
                        },
                        new
                        {
                            Id = 73,
                            EquipmentItemId = 25,
                            Price = 10000m,
                            Value = "Engine 1"
                        },
                        new
                        {
                            Id = 74,
                            EquipmentItemId = 25,
                            Price = 15000m,
                            Value = "Engine 2"
                        },
                        new
                        {
                            Id = 75,
                            EquipmentItemId = 25,
                            Price = 8000m,
                            Value = "Engine 3"
                        },
                        new
                        {
                            Id = 76,
                            EquipmentItemId = 26,
                            Price = 1000m,
                            Value = "Color 1"
                        },
                        new
                        {
                            Id = 77,
                            EquipmentItemId = 26,
                            Price = 1500m,
                            Value = "Color 2"
                        },
                        new
                        {
                            Id = 78,
                            EquipmentItemId = 26,
                            Price = 800m,
                            Value = "Color 3"
                        },
                        new
                        {
                            Id = 79,
                            EquipmentItemId = 27,
                            Price = 15000m,
                            Value = "Transmission 1"
                        },
                        new
                        {
                            Id = 80,
                            EquipmentItemId = 27,
                            Price = 12000m,
                            Value = "Transmission 2"
                        },
                        new
                        {
                            Id = 81,
                            EquipmentItemId = 27,
                            Price = 9000m,
                            Value = "Transmission 3"
                        },
                        new
                        {
                            Id = 82,
                            EquipmentItemId = 28,
                            Price = 10000m,
                            Value = "Engine 1"
                        },
                        new
                        {
                            Id = 83,
                            EquipmentItemId = 28,
                            Price = 15000m,
                            Value = "Engine 2"
                        },
                        new
                        {
                            Id = 84,
                            EquipmentItemId = 28,
                            Price = 8000m,
                            Value = "Engine 3"
                        },
                        new
                        {
                            Id = 85,
                            EquipmentItemId = 29,
                            Price = 1000m,
                            Value = "Color 1"
                        },
                        new
                        {
                            Id = 86,
                            EquipmentItemId = 29,
                            Price = 1500m,
                            Value = "Color 2"
                        },
                        new
                        {
                            Id = 87,
                            EquipmentItemId = 29,
                            Price = 800m,
                            Value = "Color 3"
                        },
                        new
                        {
                            Id = 88,
                            EquipmentItemId = 30,
                            Price = 15000m,
                            Value = "Transmission 1"
                        },
                        new
                        {
                            Id = 89,
                            EquipmentItemId = 30,
                            Price = 12000m,
                            Value = "Transmission 2"
                        },
                        new
                        {
                            Id = 90,
                            EquipmentItemId = 30,
                            Price = 9000m,
                            Value = "Transmission 3"
                        });
                });

            modelBuilder.Entity("CourseProject.DAL.Entities.Manager", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("ShowroomId")
                        .HasColumnType("int");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("ShowroomId");

                    b.HasIndex("UserId")
                        .IsUnique();

                    b.ToTable("Managers");
                });

            modelBuilder.Entity("CourseProject.DAL.Entities.Model", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("BrandId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("BrandId");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Models");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BrandId = 1,
                            Name = "X445"
                        },
                        new
                        {
                            Id = 2,
                            BrandId = 1,
                            Name = "X5"
                        },
                        new
                        {
                            Id = 3,
                            BrandId = 2,
                            Name = "Q3"
                        },
                        new
                        {
                            Id = 4,
                            BrandId = 3,
                            Name = "C34"
                        },
                        new
                        {
                            Id = 5,
                            BrandId = 4,
                            Name = "Octavia"
                        },
                        new
                        {
                            Id = 6,
                            BrandId = 5,
                            Name = "Jetta"
                        },
                        new
                        {
                            Id = 7,
                            BrandId = 6,
                            Name = "XC90"
                        });
                });

            modelBuilder.Entity("CourseProject.DAL.Entities.PurchaseOrder", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ClientId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("LastUpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("ManagerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("ShowroomId")
                        .HasColumnType("int");

                    b.Property<int>("State")
                        .HasColumnType("int");

                    b.Property<string>("VinCode")
                        .HasMaxLength(17)
                        .HasColumnType("nvarchar(17)");

                    b.HasKey("Id");

                    b.HasIndex("ClientId");

                    b.HasIndex("ManagerId");

                    b.HasIndex("ShowroomId");

                    b.HasIndex("VinCode")
                        .IsUnique()
                        .HasFilter("[VinCode] IS NOT NULL");

                    b.ToTable("PurchaseOrders");
                });

            modelBuilder.Entity("CourseProject.DAL.Entities.PurchaseOrderEquipmentItemValue", b =>
                {
                    b.Property<int>("EquipmentItemValueId")
                        .HasColumnType("int");

                    b.Property<int>("PurchaseOrderId")
                        .HasColumnType("int");

                    b.HasKey("EquipmentItemValueId", "PurchaseOrderId");

                    b.HasIndex("PurchaseOrderId");

                    b.ToTable("PurchaseOrderEquipmentItemsValues");
                });

            modelBuilder.Entity("CourseProject.DAL.Entities.Showroom", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("House")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Street")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("City", "Street", "House")
                        .IsUnique();

                    b.ToTable("Showrooms");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            City = "City 1",
                            House = "11",
                            Phone = "0987654321",
                            Street = "Street 1"
                        },
                        new
                        {
                            Id = 2,
                            City = "City 1",
                            House = "11",
                            Phone = "0987654322",
                            Street = "Street 2"
                        },
                        new
                        {
                            Id = 3,
                            City = "City 2",
                            House = "1",
                            Phone = "0997654322",
                            Street = "Street 12"
                        });
                });

            modelBuilder.Entity("CourseProject.DAL.Entities.Supplier", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("BrandId")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("BrandId");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Suppliers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BrandId = 1,
                            Email = "BMWsupplier1@gmail.com",
                            Name = "BMW supplier 1",
                            Phone = "0998765431"
                        },
                        new
                        {
                            Id = 2,
                            BrandId = 1,
                            Email = "BMWsupplier2@gmail.com",
                            Name = "BMW supplier 2",
                            Phone = "0998765432"
                        },
                        new
                        {
                            Id = 3,
                            BrandId = 2,
                            Email = "AudiSupplier1@gmail.com",
                            Name = "Audi supplier 1",
                            Phone = "0998765433"
                        },
                        new
                        {
                            Id = 4,
                            BrandId = 3,
                            Email = "CitroenSupplier@gmail.com",
                            Name = "Citroen supplier 2",
                            Phone = "0998765434"
                        },
                        new
                        {
                            Id = 5,
                            BrandId = 4,
                            Email = "SkodaSupplier@gmail.com",
                            Name = "Skoda supplier 1",
                            Phone = "0998765435"
                        },
                        new
                        {
                            Id = 6,
                            BrandId = 5,
                            Email = "VolkswagenSupplier@gmail.com",
                            Name = "Volkswagen supplier 1",
                            Phone = "0998765436"
                        },
                        new
                        {
                            Id = 7,
                            BrandId = 6,
                            Email = "VolvoSupplier@gmail.com",
                            Name = "Volvo supplier 1",
                            Phone = "0998765437"
                        });
                });

            modelBuilder.Entity("CourseProject.DAL.Entities.SupplyOrder", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("LastUpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ManagerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("State")
                        .HasColumnType("int");

                    b.Property<int>("SupplierId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ManagerId");

                    b.HasIndex("SupplierId");

                    b.ToTable("SupplyOrders");
                });

            modelBuilder.Entity("CourseProject.DAL.Entities.SupplyOrderPart", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("Count")
                        .HasColumnType("int");

                    b.Property<int>("SupplyOrderId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("SupplyOrderId");

                    b.ToTable("SupplyOrderParts");
                });

            modelBuilder.Entity("CourseProject.DAL.Entities.SupplyOrderPartEquipmentItemValue", b =>
                {
                    b.Property<int>("EquipmentItemValueId")
                        .HasColumnType("int");

                    b.Property<int>("SupplyOrderPartId")
                        .HasColumnType("int");

                    b.HasKey("EquipmentItemValueId", "SupplyOrderPartId");

                    b.HasIndex("SupplyOrderPartId");

                    b.ToTable("SupplyOrderPartEquipmentItemsValues");
                });

            modelBuilder.Entity("CourseProject.DAL.Entities.User", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Patronymic")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);

                    b.HasDiscriminator<string>("Discriminator").HasValue("User");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("CourseProject.DAL.Entities.Client", b =>
                {
                    b.HasBaseType("CourseProject.DAL.Entities.User");

                    b.HasDiscriminator().HasValue("Client");
                });

            modelBuilder.Entity("CourseProject.DAL.Entities.Car", b =>
                {
                    b.HasOne("CourseProject.DAL.Entities.Model", "Model")
                        .WithMany("Cars")
                        .HasForeignKey("ModelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Model");
                });

            modelBuilder.Entity("CourseProject.DAL.Entities.CarInStock", b =>
                {
                    b.HasOne("CourseProject.DAL.Entities.Car", "Car")
                        .WithMany()
                        .HasForeignKey("CarId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CourseProject.DAL.Entities.Showroom", "Showroom")
                        .WithMany("CarsInStock")
                        .HasForeignKey("ShowroomId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Car");

                    b.Navigation("Showroom");
                });

            modelBuilder.Entity("CourseProject.DAL.Entities.CarInStockEquipmentItemValue", b =>
                {
                    b.HasOne("CourseProject.DAL.Entities.CarInStock", "CarInStock")
                        .WithMany("CarInStockEquipmentItemValues")
                        .HasForeignKey("CarInStockId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CourseProject.DAL.Entities.EquipmentItemValue", "EquipmentItemValue")
                        .WithMany("CarInStockEquipmentItemValues")
                        .HasForeignKey("EquipmentItemValueId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("CarInStock");

                    b.Navigation("EquipmentItemValue");
                });

            modelBuilder.Entity("CourseProject.DAL.Entities.CarPhoto", b =>
                {
                    b.HasOne("CourseProject.DAL.Entities.Car", "Car")
                        .WithMany("Photos")
                        .HasForeignKey("CarId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Car");
                });

            modelBuilder.Entity("CourseProject.DAL.Entities.EquipmentItem", b =>
                {
                    b.HasOne("CourseProject.DAL.Entities.Car", "Car")
                        .WithMany("EquipmentItems")
                        .HasForeignKey("CarId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CourseProject.DAL.Entities.EquipmentItemCategory", "Category")
                        .WithMany("EquipmentItems")
                        .HasForeignKey("EquipmentItemCategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Car");

                    b.Navigation("Category");
                });

            modelBuilder.Entity("CourseProject.DAL.Entities.EquipmentItemValue", b =>
                {
                    b.HasOne("CourseProject.DAL.Entities.EquipmentItem", "EquipmentItem")
                        .WithMany("EquipmentItemValues")
                        .HasForeignKey("EquipmentItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("EquipmentItem");
                });

            modelBuilder.Entity("CourseProject.DAL.Entities.Manager", b =>
                {
                    b.HasOne("CourseProject.DAL.Entities.Showroom", "Showroom")
                        .WithMany("Managers")
                        .HasForeignKey("ShowroomId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CourseProject.DAL.Entities.User", "User")
                        .WithOne("Manager")
                        .HasForeignKey("CourseProject.DAL.Entities.Manager", "UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Showroom");

                    b.Navigation("User");
                });

            modelBuilder.Entity("CourseProject.DAL.Entities.Model", b =>
                {
                    b.HasOne("CourseProject.DAL.Entities.Brand", "Brand")
                        .WithMany("Models")
                        .HasForeignKey("BrandId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Brand");
                });

            modelBuilder.Entity("CourseProject.DAL.Entities.PurchaseOrder", b =>
                {
                    b.HasOne("CourseProject.DAL.Entities.Client", "Client")
                        .WithMany("PurchaseOrders")
                        .HasForeignKey("ClientId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("CourseProject.DAL.Entities.Manager", "Manager")
                        .WithMany("PurchaseOrders")
                        .HasForeignKey("ManagerId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("CourseProject.DAL.Entities.Showroom", "Showroom")
                        .WithMany("PurchaseOrders")
                        .HasForeignKey("ShowroomId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Client");

                    b.Navigation("Manager");

                    b.Navigation("Showroom");
                });

            modelBuilder.Entity("CourseProject.DAL.Entities.PurchaseOrderEquipmentItemValue", b =>
                {
                    b.HasOne("CourseProject.DAL.Entities.EquipmentItemValue", "EquipmentItemValue")
                        .WithMany("PurchaseOrderEquipmentItemsValues")
                        .HasForeignKey("EquipmentItemValueId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("CourseProject.DAL.Entities.PurchaseOrder", "PurchaseOrder")
                        .WithMany("PurchaseOrderEquipmentItemsValues")
                        .HasForeignKey("PurchaseOrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("EquipmentItemValue");

                    b.Navigation("PurchaseOrder");
                });

            modelBuilder.Entity("CourseProject.DAL.Entities.Supplier", b =>
                {
                    b.HasOne("CourseProject.DAL.Entities.Brand", "Brand")
                        .WithMany("Suppliers")
                        .HasForeignKey("BrandId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Brand");
                });

            modelBuilder.Entity("CourseProject.DAL.Entities.SupplyOrder", b =>
                {
                    b.HasOne("CourseProject.DAL.Entities.Manager", "Manager")
                        .WithMany("SupplyOrders")
                        .HasForeignKey("ManagerId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("CourseProject.DAL.Entities.Supplier", "Supplier")
                        .WithMany("SupplyOrders")
                        .HasForeignKey("SupplierId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Manager");

                    b.Navigation("Supplier");
                });

            modelBuilder.Entity("CourseProject.DAL.Entities.SupplyOrderPart", b =>
                {
                    b.HasOne("CourseProject.DAL.Entities.SupplyOrder", "SupplyOrder")
                        .WithMany("Parts")
                        .HasForeignKey("SupplyOrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("SupplyOrder");
                });

            modelBuilder.Entity("CourseProject.DAL.Entities.SupplyOrderPartEquipmentItemValue", b =>
                {
                    b.HasOne("CourseProject.DAL.Entities.EquipmentItemValue", "EquipmentItemValue")
                        .WithMany("SupplyOrderPartEquipmentItemsValues")
                        .HasForeignKey("EquipmentItemValueId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("CourseProject.DAL.Entities.SupplyOrderPart", "SupplyOrderPart")
                        .WithMany("SupplyOrderPartEquipmentItemsValues")
                        .HasForeignKey("SupplyOrderPartId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("EquipmentItemValue");

                    b.Navigation("SupplyOrderPart");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("CourseProject.DAL.Entities.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("CourseProject.DAL.Entities.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CourseProject.DAL.Entities.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("CourseProject.DAL.Entities.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("CourseProject.DAL.Entities.Brand", b =>
                {
                    b.Navigation("Models");

                    b.Navigation("Suppliers");
                });

            modelBuilder.Entity("CourseProject.DAL.Entities.Car", b =>
                {
                    b.Navigation("EquipmentItems");

                    b.Navigation("Photos");
                });

            modelBuilder.Entity("CourseProject.DAL.Entities.CarInStock", b =>
                {
                    b.Navigation("CarInStockEquipmentItemValues");
                });

            modelBuilder.Entity("CourseProject.DAL.Entities.EquipmentItem", b =>
                {
                    b.Navigation("EquipmentItemValues");
                });

            modelBuilder.Entity("CourseProject.DAL.Entities.EquipmentItemCategory", b =>
                {
                    b.Navigation("EquipmentItems");
                });

            modelBuilder.Entity("CourseProject.DAL.Entities.EquipmentItemValue", b =>
                {
                    b.Navigation("CarInStockEquipmentItemValues");

                    b.Navigation("PurchaseOrderEquipmentItemsValues");

                    b.Navigation("SupplyOrderPartEquipmentItemsValues");
                });

            modelBuilder.Entity("CourseProject.DAL.Entities.Manager", b =>
                {
                    b.Navigation("PurchaseOrders");

                    b.Navigation("SupplyOrders");
                });

            modelBuilder.Entity("CourseProject.DAL.Entities.Model", b =>
                {
                    b.Navigation("Cars");
                });

            modelBuilder.Entity("CourseProject.DAL.Entities.PurchaseOrder", b =>
                {
                    b.Navigation("PurchaseOrderEquipmentItemsValues");
                });

            modelBuilder.Entity("CourseProject.DAL.Entities.Showroom", b =>
                {
                    b.Navigation("CarsInStock");

                    b.Navigation("Managers");

                    b.Navigation("PurchaseOrders");
                });

            modelBuilder.Entity("CourseProject.DAL.Entities.Supplier", b =>
                {
                    b.Navigation("SupplyOrders");
                });

            modelBuilder.Entity("CourseProject.DAL.Entities.SupplyOrder", b =>
                {
                    b.Navigation("Parts");
                });

            modelBuilder.Entity("CourseProject.DAL.Entities.SupplyOrderPart", b =>
                {
                    b.Navigation("SupplyOrderPartEquipmentItemsValues");
                });

            modelBuilder.Entity("CourseProject.DAL.Entities.User", b =>
                {
                    b.Navigation("Manager")
                        .IsRequired();
                });

            modelBuilder.Entity("CourseProject.DAL.Entities.Client", b =>
                {
                    b.Navigation("PurchaseOrders");
                });
#pragma warning restore 612, 618
        }
    }
}
